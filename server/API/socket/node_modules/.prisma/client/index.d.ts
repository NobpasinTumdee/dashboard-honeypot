
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model honeypot_logs
 * 
 */
export type honeypot_logs = $Result.DefaultSelection<Prisma.$honeypot_logsPayload>
/**
 * Model opencanary_logs
 * 
 */
export type opencanary_logs = $Result.DefaultSelection<Prisma.$opencanary_logsPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Honeypot_logs
 * const honeypot_logs = await prisma.honeypot_logs.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  const U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Honeypot_logs
   * const honeypot_logs = await prisma.honeypot_logs.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.honeypot_logs`: Exposes CRUD operations for the **honeypot_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Honeypot_logs
    * const honeypot_logs = await prisma.honeypot_logs.findMany()
    * ```
    */
  get honeypot_logs(): Prisma.honeypot_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.opencanary_logs`: Exposes CRUD operations for the **opencanary_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Opencanary_logs
    * const opencanary_logs = await prisma.opencanary_logs.findMany()
    * ```
    */
  get opencanary_logs(): Prisma.opencanary_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.13.0
   * Query Engine version: 361e86d0ea4987e9f53a565309b3eed797a6bcbd
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    honeypot_logs: 'honeypot_logs',
    opencanary_logs: 'opencanary_logs',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "honeypot_logs" | "opencanary_logs" | "users"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      honeypot_logs: {
        payload: Prisma.$honeypot_logsPayload<ExtArgs>
        fields: Prisma.honeypot_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.honeypot_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.honeypot_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>
          }
          findFirst: {
            args: Prisma.honeypot_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.honeypot_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>
          }
          findMany: {
            args: Prisma.honeypot_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>[]
          }
          create: {
            args: Prisma.honeypot_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>
          }
          createMany: {
            args: Prisma.honeypot_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.honeypot_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>[]
          }
          delete: {
            args: Prisma.honeypot_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>
          }
          update: {
            args: Prisma.honeypot_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>
          }
          deleteMany: {
            args: Prisma.honeypot_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.honeypot_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.honeypot_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>[]
          }
          upsert: {
            args: Prisma.honeypot_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$honeypot_logsPayload>
          }
          aggregate: {
            args: Prisma.Honeypot_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHoneypot_logs>
          }
          groupBy: {
            args: Prisma.honeypot_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Honeypot_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.honeypot_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Honeypot_logsCountAggregateOutputType> | number
          }
        }
      }
      opencanary_logs: {
        payload: Prisma.$opencanary_logsPayload<ExtArgs>
        fields: Prisma.opencanary_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.opencanary_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.opencanary_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>
          }
          findFirst: {
            args: Prisma.opencanary_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.opencanary_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>
          }
          findMany: {
            args: Prisma.opencanary_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>[]
          }
          create: {
            args: Prisma.opencanary_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>
          }
          createMany: {
            args: Prisma.opencanary_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.opencanary_logsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>[]
          }
          delete: {
            args: Prisma.opencanary_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>
          }
          update: {
            args: Prisma.opencanary_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>
          }
          deleteMany: {
            args: Prisma.opencanary_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.opencanary_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.opencanary_logsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>[]
          }
          upsert: {
            args: Prisma.opencanary_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$opencanary_logsPayload>
          }
          aggregate: {
            args: Prisma.Opencanary_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOpencanary_logs>
          }
          groupBy: {
            args: Prisma.opencanary_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Opencanary_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.opencanary_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Opencanary_logsCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Shorthand for `emit: 'stdout'`
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events only
     * log: [
     *   { emit: 'event', level: 'query' },
     *   { emit: 'event', level: 'info' },
     *   { emit: 'event', level: 'warn' }
     *   { emit: 'event', level: 'error' }
     * ]
     * 
     * / Emit as events and log to stdout
     * og: [
     *  { emit: 'stdout', level: 'query' },
     *  { emit: 'stdout', level: 'info' },
     *  { emit: 'stdout', level: 'warn' }
     *  { emit: 'stdout', level: 'error' }
     * 
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    honeypot_logs?: honeypot_logsOmit
    opencanary_logs?: opencanary_logsOmit
    users?: usersOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type CheckIsLogLevel<T> = T extends LogLevel ? T : never;

  export type GetLogType<T> = CheckIsLogLevel<
    T extends LogDefinition ? T['level'] : T
  >;

  export type GetEvents<T extends any[]> = T extends Array<LogLevel | LogDefinition>
    ? GetLogType<T[number]>
    : never;

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model honeypot_logs
   */

  export type AggregateHoneypot_logs = {
    _count: Honeypot_logsCountAggregateOutputType | null
    _avg: Honeypot_logsAvgAggregateOutputType | null
    _sum: Honeypot_logsSumAggregateOutputType | null
    _min: Honeypot_logsMinAggregateOutputType | null
    _max: Honeypot_logsMaxAggregateOutputType | null
  }

  export type Honeypot_logsAvgAggregateOutputType = {
    id: number | null
    src_port: number | null
    dst_port: number | null
    duration: number | null
  }

  export type Honeypot_logsSumAggregateOutputType = {
    id: number | null
    src_port: number | null
    dst_port: number | null
    duration: number | null
  }

  export type Honeypot_logsMinAggregateOutputType = {
    id: number | null
    timestamp: string | null
    eventid: string | null
    session: string | null
    message: string | null
    protocol: string | null
    src_ip: string | null
    src_port: number | null
    dst_ip: string | null
    dst_port: number | null
    username: string | null
    password: string | null
    input: string | null
    command: string | null
    duration: number | null
    ttylog: string | null
    json_data: string | null
  }

  export type Honeypot_logsMaxAggregateOutputType = {
    id: number | null
    timestamp: string | null
    eventid: string | null
    session: string | null
    message: string | null
    protocol: string | null
    src_ip: string | null
    src_port: number | null
    dst_ip: string | null
    dst_port: number | null
    username: string | null
    password: string | null
    input: string | null
    command: string | null
    duration: number | null
    ttylog: string | null
    json_data: string | null
  }

  export type Honeypot_logsCountAggregateOutputType = {
    id: number
    timestamp: number
    eventid: number
    session: number
    message: number
    protocol: number
    src_ip: number
    src_port: number
    dst_ip: number
    dst_port: number
    username: number
    password: number
    input: number
    command: number
    duration: number
    ttylog: number
    json_data: number
    _all: number
  }


  export type Honeypot_logsAvgAggregateInputType = {
    id?: true
    src_port?: true
    dst_port?: true
    duration?: true
  }

  export type Honeypot_logsSumAggregateInputType = {
    id?: true
    src_port?: true
    dst_port?: true
    duration?: true
  }

  export type Honeypot_logsMinAggregateInputType = {
    id?: true
    timestamp?: true
    eventid?: true
    session?: true
    message?: true
    protocol?: true
    src_ip?: true
    src_port?: true
    dst_ip?: true
    dst_port?: true
    username?: true
    password?: true
    input?: true
    command?: true
    duration?: true
    ttylog?: true
    json_data?: true
  }

  export type Honeypot_logsMaxAggregateInputType = {
    id?: true
    timestamp?: true
    eventid?: true
    session?: true
    message?: true
    protocol?: true
    src_ip?: true
    src_port?: true
    dst_ip?: true
    dst_port?: true
    username?: true
    password?: true
    input?: true
    command?: true
    duration?: true
    ttylog?: true
    json_data?: true
  }

  export type Honeypot_logsCountAggregateInputType = {
    id?: true
    timestamp?: true
    eventid?: true
    session?: true
    message?: true
    protocol?: true
    src_ip?: true
    src_port?: true
    dst_ip?: true
    dst_port?: true
    username?: true
    password?: true
    input?: true
    command?: true
    duration?: true
    ttylog?: true
    json_data?: true
    _all?: true
  }

  export type Honeypot_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which honeypot_logs to aggregate.
     */
    where?: honeypot_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of honeypot_logs to fetch.
     */
    orderBy?: honeypot_logsOrderByWithRelationInput | honeypot_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: honeypot_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` honeypot_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` honeypot_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned honeypot_logs
    **/
    _count?: true | Honeypot_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Honeypot_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Honeypot_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Honeypot_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Honeypot_logsMaxAggregateInputType
  }

  export type GetHoneypot_logsAggregateType<T extends Honeypot_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateHoneypot_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHoneypot_logs[P]>
      : GetScalarType<T[P], AggregateHoneypot_logs[P]>
  }




  export type honeypot_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: honeypot_logsWhereInput
    orderBy?: honeypot_logsOrderByWithAggregationInput | honeypot_logsOrderByWithAggregationInput[]
    by: Honeypot_logsScalarFieldEnum[] | Honeypot_logsScalarFieldEnum
    having?: honeypot_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Honeypot_logsCountAggregateInputType | true
    _avg?: Honeypot_logsAvgAggregateInputType
    _sum?: Honeypot_logsSumAggregateInputType
    _min?: Honeypot_logsMinAggregateInputType
    _max?: Honeypot_logsMaxAggregateInputType
  }

  export type Honeypot_logsGroupByOutputType = {
    id: number
    timestamp: string | null
    eventid: string | null
    session: string | null
    message: string | null
    protocol: string | null
    src_ip: string | null
    src_port: number | null
    dst_ip: string | null
    dst_port: number | null
    username: string | null
    password: string | null
    input: string | null
    command: string | null
    duration: number | null
    ttylog: string | null
    json_data: string | null
    _count: Honeypot_logsCountAggregateOutputType | null
    _avg: Honeypot_logsAvgAggregateOutputType | null
    _sum: Honeypot_logsSumAggregateOutputType | null
    _min: Honeypot_logsMinAggregateOutputType | null
    _max: Honeypot_logsMaxAggregateOutputType | null
  }

  type GetHoneypot_logsGroupByPayload<T extends honeypot_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Honeypot_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Honeypot_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Honeypot_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Honeypot_logsGroupByOutputType[P]>
        }
      >
    >


  export type honeypot_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    eventid?: boolean
    session?: boolean
    message?: boolean
    protocol?: boolean
    src_ip?: boolean
    src_port?: boolean
    dst_ip?: boolean
    dst_port?: boolean
    username?: boolean
    password?: boolean
    input?: boolean
    command?: boolean
    duration?: boolean
    ttylog?: boolean
    json_data?: boolean
  }, ExtArgs["result"]["honeypot_logs"]>

  export type honeypot_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    eventid?: boolean
    session?: boolean
    message?: boolean
    protocol?: boolean
    src_ip?: boolean
    src_port?: boolean
    dst_ip?: boolean
    dst_port?: boolean
    username?: boolean
    password?: boolean
    input?: boolean
    command?: boolean
    duration?: boolean
    ttylog?: boolean
    json_data?: boolean
  }, ExtArgs["result"]["honeypot_logs"]>

  export type honeypot_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    timestamp?: boolean
    eventid?: boolean
    session?: boolean
    message?: boolean
    protocol?: boolean
    src_ip?: boolean
    src_port?: boolean
    dst_ip?: boolean
    dst_port?: boolean
    username?: boolean
    password?: boolean
    input?: boolean
    command?: boolean
    duration?: boolean
    ttylog?: boolean
    json_data?: boolean
  }, ExtArgs["result"]["honeypot_logs"]>

  export type honeypot_logsSelectScalar = {
    id?: boolean
    timestamp?: boolean
    eventid?: boolean
    session?: boolean
    message?: boolean
    protocol?: boolean
    src_ip?: boolean
    src_port?: boolean
    dst_ip?: boolean
    dst_port?: boolean
    username?: boolean
    password?: boolean
    input?: boolean
    command?: boolean
    duration?: boolean
    ttylog?: boolean
    json_data?: boolean
  }

  export type honeypot_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "timestamp" | "eventid" | "session" | "message" | "protocol" | "src_ip" | "src_port" | "dst_ip" | "dst_port" | "username" | "password" | "input" | "command" | "duration" | "ttylog" | "json_data", ExtArgs["result"]["honeypot_logs"]>

  export type $honeypot_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "honeypot_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      timestamp: string | null
      eventid: string | null
      session: string | null
      message: string | null
      protocol: string | null
      src_ip: string | null
      src_port: number | null
      dst_ip: string | null
      dst_port: number | null
      username: string | null
      password: string | null
      input: string | null
      command: string | null
      duration: number | null
      ttylog: string | null
      json_data: string | null
    }, ExtArgs["result"]["honeypot_logs"]>
    composites: {}
  }

  type honeypot_logsGetPayload<S extends boolean | null | undefined | honeypot_logsDefaultArgs> = $Result.GetResult<Prisma.$honeypot_logsPayload, S>

  type honeypot_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<honeypot_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Honeypot_logsCountAggregateInputType | true
    }

  export interface honeypot_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['honeypot_logs'], meta: { name: 'honeypot_logs' } }
    /**
     * Find zero or one Honeypot_logs that matches the filter.
     * @param {honeypot_logsFindUniqueArgs} args - Arguments to find a Honeypot_logs
     * @example
     * // Get one Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends honeypot_logsFindUniqueArgs>(args: SelectSubset<T, honeypot_logsFindUniqueArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Honeypot_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {honeypot_logsFindUniqueOrThrowArgs} args - Arguments to find a Honeypot_logs
     * @example
     * // Get one Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends honeypot_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, honeypot_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Honeypot_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {honeypot_logsFindFirstArgs} args - Arguments to find a Honeypot_logs
     * @example
     * // Get one Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends honeypot_logsFindFirstArgs>(args?: SelectSubset<T, honeypot_logsFindFirstArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Honeypot_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {honeypot_logsFindFirstOrThrowArgs} args - Arguments to find a Honeypot_logs
     * @example
     * // Get one Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends honeypot_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, honeypot_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Honeypot_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {honeypot_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.findMany()
     * 
     * // Get first 10 Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const honeypot_logsWithIdOnly = await prisma.honeypot_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends honeypot_logsFindManyArgs>(args?: SelectSubset<T, honeypot_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Honeypot_logs.
     * @param {honeypot_logsCreateArgs} args - Arguments to create a Honeypot_logs.
     * @example
     * // Create one Honeypot_logs
     * const Honeypot_logs = await prisma.honeypot_logs.create({
     *   data: {
     *     // ... data to create a Honeypot_logs
     *   }
     * })
     * 
     */
    create<T extends honeypot_logsCreateArgs>(args: SelectSubset<T, honeypot_logsCreateArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Honeypot_logs.
     * @param {honeypot_logsCreateManyArgs} args - Arguments to create many Honeypot_logs.
     * @example
     * // Create many Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends honeypot_logsCreateManyArgs>(args?: SelectSubset<T, honeypot_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Honeypot_logs and returns the data saved in the database.
     * @param {honeypot_logsCreateManyAndReturnArgs} args - Arguments to create many Honeypot_logs.
     * @example
     * // Create many Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Honeypot_logs and only return the `id`
     * const honeypot_logsWithIdOnly = await prisma.honeypot_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends honeypot_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, honeypot_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Honeypot_logs.
     * @param {honeypot_logsDeleteArgs} args - Arguments to delete one Honeypot_logs.
     * @example
     * // Delete one Honeypot_logs
     * const Honeypot_logs = await prisma.honeypot_logs.delete({
     *   where: {
     *     // ... filter to delete one Honeypot_logs
     *   }
     * })
     * 
     */
    delete<T extends honeypot_logsDeleteArgs>(args: SelectSubset<T, honeypot_logsDeleteArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Honeypot_logs.
     * @param {honeypot_logsUpdateArgs} args - Arguments to update one Honeypot_logs.
     * @example
     * // Update one Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends honeypot_logsUpdateArgs>(args: SelectSubset<T, honeypot_logsUpdateArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Honeypot_logs.
     * @param {honeypot_logsDeleteManyArgs} args - Arguments to filter Honeypot_logs to delete.
     * @example
     * // Delete a few Honeypot_logs
     * const { count } = await prisma.honeypot_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends honeypot_logsDeleteManyArgs>(args?: SelectSubset<T, honeypot_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Honeypot_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {honeypot_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends honeypot_logsUpdateManyArgs>(args: SelectSubset<T, honeypot_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Honeypot_logs and returns the data updated in the database.
     * @param {honeypot_logsUpdateManyAndReturnArgs} args - Arguments to update many Honeypot_logs.
     * @example
     * // Update many Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Honeypot_logs and only return the `id`
     * const honeypot_logsWithIdOnly = await prisma.honeypot_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends honeypot_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, honeypot_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Honeypot_logs.
     * @param {honeypot_logsUpsertArgs} args - Arguments to update or create a Honeypot_logs.
     * @example
     * // Update or create a Honeypot_logs
     * const honeypot_logs = await prisma.honeypot_logs.upsert({
     *   create: {
     *     // ... data to create a Honeypot_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Honeypot_logs we want to update
     *   }
     * })
     */
    upsert<T extends honeypot_logsUpsertArgs>(args: SelectSubset<T, honeypot_logsUpsertArgs<ExtArgs>>): Prisma__honeypot_logsClient<$Result.GetResult<Prisma.$honeypot_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Honeypot_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {honeypot_logsCountArgs} args - Arguments to filter Honeypot_logs to count.
     * @example
     * // Count the number of Honeypot_logs
     * const count = await prisma.honeypot_logs.count({
     *   where: {
     *     // ... the filter for the Honeypot_logs we want to count
     *   }
     * })
    **/
    count<T extends honeypot_logsCountArgs>(
      args?: Subset<T, honeypot_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Honeypot_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Honeypot_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Honeypot_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Honeypot_logsAggregateArgs>(args: Subset<T, Honeypot_logsAggregateArgs>): Prisma.PrismaPromise<GetHoneypot_logsAggregateType<T>>

    /**
     * Group by Honeypot_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {honeypot_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends honeypot_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: honeypot_logsGroupByArgs['orderBy'] }
        : { orderBy?: honeypot_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, honeypot_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHoneypot_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the honeypot_logs model
   */
  readonly fields: honeypot_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for honeypot_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__honeypot_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the honeypot_logs model
   */
  interface honeypot_logsFieldRefs {
    readonly id: FieldRef<"honeypot_logs", 'Int'>
    readonly timestamp: FieldRef<"honeypot_logs", 'String'>
    readonly eventid: FieldRef<"honeypot_logs", 'String'>
    readonly session: FieldRef<"honeypot_logs", 'String'>
    readonly message: FieldRef<"honeypot_logs", 'String'>
    readonly protocol: FieldRef<"honeypot_logs", 'String'>
    readonly src_ip: FieldRef<"honeypot_logs", 'String'>
    readonly src_port: FieldRef<"honeypot_logs", 'Int'>
    readonly dst_ip: FieldRef<"honeypot_logs", 'String'>
    readonly dst_port: FieldRef<"honeypot_logs", 'Int'>
    readonly username: FieldRef<"honeypot_logs", 'String'>
    readonly password: FieldRef<"honeypot_logs", 'String'>
    readonly input: FieldRef<"honeypot_logs", 'String'>
    readonly command: FieldRef<"honeypot_logs", 'String'>
    readonly duration: FieldRef<"honeypot_logs", 'Float'>
    readonly ttylog: FieldRef<"honeypot_logs", 'String'>
    readonly json_data: FieldRef<"honeypot_logs", 'String'>
  }
    

  // Custom InputTypes
  /**
   * honeypot_logs findUnique
   */
  export type honeypot_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * Filter, which honeypot_logs to fetch.
     */
    where: honeypot_logsWhereUniqueInput
  }

  /**
   * honeypot_logs findUniqueOrThrow
   */
  export type honeypot_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * Filter, which honeypot_logs to fetch.
     */
    where: honeypot_logsWhereUniqueInput
  }

  /**
   * honeypot_logs findFirst
   */
  export type honeypot_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * Filter, which honeypot_logs to fetch.
     */
    where?: honeypot_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of honeypot_logs to fetch.
     */
    orderBy?: honeypot_logsOrderByWithRelationInput | honeypot_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for honeypot_logs.
     */
    cursor?: honeypot_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` honeypot_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` honeypot_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of honeypot_logs.
     */
    distinct?: Honeypot_logsScalarFieldEnum | Honeypot_logsScalarFieldEnum[]
  }

  /**
   * honeypot_logs findFirstOrThrow
   */
  export type honeypot_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * Filter, which honeypot_logs to fetch.
     */
    where?: honeypot_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of honeypot_logs to fetch.
     */
    orderBy?: honeypot_logsOrderByWithRelationInput | honeypot_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for honeypot_logs.
     */
    cursor?: honeypot_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` honeypot_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` honeypot_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of honeypot_logs.
     */
    distinct?: Honeypot_logsScalarFieldEnum | Honeypot_logsScalarFieldEnum[]
  }

  /**
   * honeypot_logs findMany
   */
  export type honeypot_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * Filter, which honeypot_logs to fetch.
     */
    where?: honeypot_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of honeypot_logs to fetch.
     */
    orderBy?: honeypot_logsOrderByWithRelationInput | honeypot_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing honeypot_logs.
     */
    cursor?: honeypot_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` honeypot_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` honeypot_logs.
     */
    skip?: number
    distinct?: Honeypot_logsScalarFieldEnum | Honeypot_logsScalarFieldEnum[]
  }

  /**
   * honeypot_logs create
   */
  export type honeypot_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a honeypot_logs.
     */
    data?: XOR<honeypot_logsCreateInput, honeypot_logsUncheckedCreateInput>
  }

  /**
   * honeypot_logs createMany
   */
  export type honeypot_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many honeypot_logs.
     */
    data: honeypot_logsCreateManyInput | honeypot_logsCreateManyInput[]
  }

  /**
   * honeypot_logs createManyAndReturn
   */
  export type honeypot_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * The data used to create many honeypot_logs.
     */
    data: honeypot_logsCreateManyInput | honeypot_logsCreateManyInput[]
  }

  /**
   * honeypot_logs update
   */
  export type honeypot_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a honeypot_logs.
     */
    data: XOR<honeypot_logsUpdateInput, honeypot_logsUncheckedUpdateInput>
    /**
     * Choose, which honeypot_logs to update.
     */
    where: honeypot_logsWhereUniqueInput
  }

  /**
   * honeypot_logs updateMany
   */
  export type honeypot_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update honeypot_logs.
     */
    data: XOR<honeypot_logsUpdateManyMutationInput, honeypot_logsUncheckedUpdateManyInput>
    /**
     * Filter which honeypot_logs to update
     */
    where?: honeypot_logsWhereInput
    /**
     * Limit how many honeypot_logs to update.
     */
    limit?: number
  }

  /**
   * honeypot_logs updateManyAndReturn
   */
  export type honeypot_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * The data used to update honeypot_logs.
     */
    data: XOR<honeypot_logsUpdateManyMutationInput, honeypot_logsUncheckedUpdateManyInput>
    /**
     * Filter which honeypot_logs to update
     */
    where?: honeypot_logsWhereInput
    /**
     * Limit how many honeypot_logs to update.
     */
    limit?: number
  }

  /**
   * honeypot_logs upsert
   */
  export type honeypot_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the honeypot_logs to update in case it exists.
     */
    where: honeypot_logsWhereUniqueInput
    /**
     * In case the honeypot_logs found by the `where` argument doesn't exist, create a new honeypot_logs with this data.
     */
    create: XOR<honeypot_logsCreateInput, honeypot_logsUncheckedCreateInput>
    /**
     * In case the honeypot_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<honeypot_logsUpdateInput, honeypot_logsUncheckedUpdateInput>
  }

  /**
   * honeypot_logs delete
   */
  export type honeypot_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
    /**
     * Filter which honeypot_logs to delete.
     */
    where: honeypot_logsWhereUniqueInput
  }

  /**
   * honeypot_logs deleteMany
   */
  export type honeypot_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which honeypot_logs to delete
     */
    where?: honeypot_logsWhereInput
    /**
     * Limit how many honeypot_logs to delete.
     */
    limit?: number
  }

  /**
   * honeypot_logs without action
   */
  export type honeypot_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the honeypot_logs
     */
    select?: honeypot_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the honeypot_logs
     */
    omit?: honeypot_logsOmit<ExtArgs> | null
  }


  /**
   * Model opencanary_logs
   */

  export type AggregateOpencanary_logs = {
    _count: Opencanary_logsCountAggregateOutputType | null
    _avg: Opencanary_logsAvgAggregateOutputType | null
    _sum: Opencanary_logsSumAggregateOutputType | null
    _min: Opencanary_logsMinAggregateOutputType | null
    _max: Opencanary_logsMaxAggregateOutputType | null
  }

  export type Opencanary_logsAvgAggregateOutputType = {
    id: number | null
    dst_port: number | null
    logtype: number | null
    src_port: number | null
  }

  export type Opencanary_logsSumAggregateOutputType = {
    id: number | null
    dst_port: number | null
    logtype: number | null
    src_port: number | null
  }

  export type Opencanary_logsMinAggregateOutputType = {
    id: number | null
    dst_host: string | null
    dst_port: number | null
    local_time: string | null
    local_time_adjusted: string | null
    logdata_raw: string | null
    logdata_msg_logdata: string | null
    logtype: number | null
    node_id: string | null
    src_host: string | null
    src_port: number | null
    utc_time: string | null
    full_json_line: string | null
  }

  export type Opencanary_logsMaxAggregateOutputType = {
    id: number | null
    dst_host: string | null
    dst_port: number | null
    local_time: string | null
    local_time_adjusted: string | null
    logdata_raw: string | null
    logdata_msg_logdata: string | null
    logtype: number | null
    node_id: string | null
    src_host: string | null
    src_port: number | null
    utc_time: string | null
    full_json_line: string | null
  }

  export type Opencanary_logsCountAggregateOutputType = {
    id: number
    dst_host: number
    dst_port: number
    local_time: number
    local_time_adjusted: number
    logdata_raw: number
    logdata_msg_logdata: number
    logtype: number
    node_id: number
    src_host: number
    src_port: number
    utc_time: number
    full_json_line: number
    _all: number
  }


  export type Opencanary_logsAvgAggregateInputType = {
    id?: true
    dst_port?: true
    logtype?: true
    src_port?: true
  }

  export type Opencanary_logsSumAggregateInputType = {
    id?: true
    dst_port?: true
    logtype?: true
    src_port?: true
  }

  export type Opencanary_logsMinAggregateInputType = {
    id?: true
    dst_host?: true
    dst_port?: true
    local_time?: true
    local_time_adjusted?: true
    logdata_raw?: true
    logdata_msg_logdata?: true
    logtype?: true
    node_id?: true
    src_host?: true
    src_port?: true
    utc_time?: true
    full_json_line?: true
  }

  export type Opencanary_logsMaxAggregateInputType = {
    id?: true
    dst_host?: true
    dst_port?: true
    local_time?: true
    local_time_adjusted?: true
    logdata_raw?: true
    logdata_msg_logdata?: true
    logtype?: true
    node_id?: true
    src_host?: true
    src_port?: true
    utc_time?: true
    full_json_line?: true
  }

  export type Opencanary_logsCountAggregateInputType = {
    id?: true
    dst_host?: true
    dst_port?: true
    local_time?: true
    local_time_adjusted?: true
    logdata_raw?: true
    logdata_msg_logdata?: true
    logtype?: true
    node_id?: true
    src_host?: true
    src_port?: true
    utc_time?: true
    full_json_line?: true
    _all?: true
  }

  export type Opencanary_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which opencanary_logs to aggregate.
     */
    where?: opencanary_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opencanary_logs to fetch.
     */
    orderBy?: opencanary_logsOrderByWithRelationInput | opencanary_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: opencanary_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opencanary_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opencanary_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned opencanary_logs
    **/
    _count?: true | Opencanary_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Opencanary_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Opencanary_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Opencanary_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Opencanary_logsMaxAggregateInputType
  }

  export type GetOpencanary_logsAggregateType<T extends Opencanary_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateOpencanary_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOpencanary_logs[P]>
      : GetScalarType<T[P], AggregateOpencanary_logs[P]>
  }




  export type opencanary_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: opencanary_logsWhereInput
    orderBy?: opencanary_logsOrderByWithAggregationInput | opencanary_logsOrderByWithAggregationInput[]
    by: Opencanary_logsScalarFieldEnum[] | Opencanary_logsScalarFieldEnum
    having?: opencanary_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Opencanary_logsCountAggregateInputType | true
    _avg?: Opencanary_logsAvgAggregateInputType
    _sum?: Opencanary_logsSumAggregateInputType
    _min?: Opencanary_logsMinAggregateInputType
    _max?: Opencanary_logsMaxAggregateInputType
  }

  export type Opencanary_logsGroupByOutputType = {
    id: number
    dst_host: string | null
    dst_port: number | null
    local_time: string | null
    local_time_adjusted: string | null
    logdata_raw: string | null
    logdata_msg_logdata: string | null
    logtype: number | null
    node_id: string | null
    src_host: string | null
    src_port: number | null
    utc_time: string | null
    full_json_line: string | null
    _count: Opencanary_logsCountAggregateOutputType | null
    _avg: Opencanary_logsAvgAggregateOutputType | null
    _sum: Opencanary_logsSumAggregateOutputType | null
    _min: Opencanary_logsMinAggregateOutputType | null
    _max: Opencanary_logsMaxAggregateOutputType | null
  }

  type GetOpencanary_logsGroupByPayload<T extends opencanary_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Opencanary_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Opencanary_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Opencanary_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Opencanary_logsGroupByOutputType[P]>
        }
      >
    >


  export type opencanary_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dst_host?: boolean
    dst_port?: boolean
    local_time?: boolean
    local_time_adjusted?: boolean
    logdata_raw?: boolean
    logdata_msg_logdata?: boolean
    logtype?: boolean
    node_id?: boolean
    src_host?: boolean
    src_port?: boolean
    utc_time?: boolean
    full_json_line?: boolean
  }, ExtArgs["result"]["opencanary_logs"]>

  export type opencanary_logsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dst_host?: boolean
    dst_port?: boolean
    local_time?: boolean
    local_time_adjusted?: boolean
    logdata_raw?: boolean
    logdata_msg_logdata?: boolean
    logtype?: boolean
    node_id?: boolean
    src_host?: boolean
    src_port?: boolean
    utc_time?: boolean
    full_json_line?: boolean
  }, ExtArgs["result"]["opencanary_logs"]>

  export type opencanary_logsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dst_host?: boolean
    dst_port?: boolean
    local_time?: boolean
    local_time_adjusted?: boolean
    logdata_raw?: boolean
    logdata_msg_logdata?: boolean
    logtype?: boolean
    node_id?: boolean
    src_host?: boolean
    src_port?: boolean
    utc_time?: boolean
    full_json_line?: boolean
  }, ExtArgs["result"]["opencanary_logs"]>

  export type opencanary_logsSelectScalar = {
    id?: boolean
    dst_host?: boolean
    dst_port?: boolean
    local_time?: boolean
    local_time_adjusted?: boolean
    logdata_raw?: boolean
    logdata_msg_logdata?: boolean
    logtype?: boolean
    node_id?: boolean
    src_host?: boolean
    src_port?: boolean
    utc_time?: boolean
    full_json_line?: boolean
  }

  export type opencanary_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dst_host" | "dst_port" | "local_time" | "local_time_adjusted" | "logdata_raw" | "logdata_msg_logdata" | "logtype" | "node_id" | "src_host" | "src_port" | "utc_time" | "full_json_line", ExtArgs["result"]["opencanary_logs"]>

  export type $opencanary_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "opencanary_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      dst_host: string | null
      dst_port: number | null
      local_time: string | null
      local_time_adjusted: string | null
      logdata_raw: string | null
      logdata_msg_logdata: string | null
      logtype: number | null
      node_id: string | null
      src_host: string | null
      src_port: number | null
      utc_time: string | null
      full_json_line: string | null
    }, ExtArgs["result"]["opencanary_logs"]>
    composites: {}
  }

  type opencanary_logsGetPayload<S extends boolean | null | undefined | opencanary_logsDefaultArgs> = $Result.GetResult<Prisma.$opencanary_logsPayload, S>

  type opencanary_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<opencanary_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Opencanary_logsCountAggregateInputType | true
    }

  export interface opencanary_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['opencanary_logs'], meta: { name: 'opencanary_logs' } }
    /**
     * Find zero or one Opencanary_logs that matches the filter.
     * @param {opencanary_logsFindUniqueArgs} args - Arguments to find a Opencanary_logs
     * @example
     * // Get one Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends opencanary_logsFindUniqueArgs>(args: SelectSubset<T, opencanary_logsFindUniqueArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Opencanary_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {opencanary_logsFindUniqueOrThrowArgs} args - Arguments to find a Opencanary_logs
     * @example
     * // Get one Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends opencanary_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, opencanary_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Opencanary_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opencanary_logsFindFirstArgs} args - Arguments to find a Opencanary_logs
     * @example
     * // Get one Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends opencanary_logsFindFirstArgs>(args?: SelectSubset<T, opencanary_logsFindFirstArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Opencanary_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opencanary_logsFindFirstOrThrowArgs} args - Arguments to find a Opencanary_logs
     * @example
     * // Get one Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends opencanary_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, opencanary_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Opencanary_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opencanary_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.findMany()
     * 
     * // Get first 10 Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const opencanary_logsWithIdOnly = await prisma.opencanary_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends opencanary_logsFindManyArgs>(args?: SelectSubset<T, opencanary_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Opencanary_logs.
     * @param {opencanary_logsCreateArgs} args - Arguments to create a Opencanary_logs.
     * @example
     * // Create one Opencanary_logs
     * const Opencanary_logs = await prisma.opencanary_logs.create({
     *   data: {
     *     // ... data to create a Opencanary_logs
     *   }
     * })
     * 
     */
    create<T extends opencanary_logsCreateArgs>(args: SelectSubset<T, opencanary_logsCreateArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Opencanary_logs.
     * @param {opencanary_logsCreateManyArgs} args - Arguments to create many Opencanary_logs.
     * @example
     * // Create many Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends opencanary_logsCreateManyArgs>(args?: SelectSubset<T, opencanary_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Opencanary_logs and returns the data saved in the database.
     * @param {opencanary_logsCreateManyAndReturnArgs} args - Arguments to create many Opencanary_logs.
     * @example
     * // Create many Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Opencanary_logs and only return the `id`
     * const opencanary_logsWithIdOnly = await prisma.opencanary_logs.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends opencanary_logsCreateManyAndReturnArgs>(args?: SelectSubset<T, opencanary_logsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Opencanary_logs.
     * @param {opencanary_logsDeleteArgs} args - Arguments to delete one Opencanary_logs.
     * @example
     * // Delete one Opencanary_logs
     * const Opencanary_logs = await prisma.opencanary_logs.delete({
     *   where: {
     *     // ... filter to delete one Opencanary_logs
     *   }
     * })
     * 
     */
    delete<T extends opencanary_logsDeleteArgs>(args: SelectSubset<T, opencanary_logsDeleteArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Opencanary_logs.
     * @param {opencanary_logsUpdateArgs} args - Arguments to update one Opencanary_logs.
     * @example
     * // Update one Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends opencanary_logsUpdateArgs>(args: SelectSubset<T, opencanary_logsUpdateArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Opencanary_logs.
     * @param {opencanary_logsDeleteManyArgs} args - Arguments to filter Opencanary_logs to delete.
     * @example
     * // Delete a few Opencanary_logs
     * const { count } = await prisma.opencanary_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends opencanary_logsDeleteManyArgs>(args?: SelectSubset<T, opencanary_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opencanary_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opencanary_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends opencanary_logsUpdateManyArgs>(args: SelectSubset<T, opencanary_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Opencanary_logs and returns the data updated in the database.
     * @param {opencanary_logsUpdateManyAndReturnArgs} args - Arguments to update many Opencanary_logs.
     * @example
     * // Update many Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Opencanary_logs and only return the `id`
     * const opencanary_logsWithIdOnly = await prisma.opencanary_logs.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends opencanary_logsUpdateManyAndReturnArgs>(args: SelectSubset<T, opencanary_logsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Opencanary_logs.
     * @param {opencanary_logsUpsertArgs} args - Arguments to update or create a Opencanary_logs.
     * @example
     * // Update or create a Opencanary_logs
     * const opencanary_logs = await prisma.opencanary_logs.upsert({
     *   create: {
     *     // ... data to create a Opencanary_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Opencanary_logs we want to update
     *   }
     * })
     */
    upsert<T extends opencanary_logsUpsertArgs>(args: SelectSubset<T, opencanary_logsUpsertArgs<ExtArgs>>): Prisma__opencanary_logsClient<$Result.GetResult<Prisma.$opencanary_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Opencanary_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opencanary_logsCountArgs} args - Arguments to filter Opencanary_logs to count.
     * @example
     * // Count the number of Opencanary_logs
     * const count = await prisma.opencanary_logs.count({
     *   where: {
     *     // ... the filter for the Opencanary_logs we want to count
     *   }
     * })
    **/
    count<T extends opencanary_logsCountArgs>(
      args?: Subset<T, opencanary_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Opencanary_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Opencanary_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Opencanary_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Opencanary_logsAggregateArgs>(args: Subset<T, Opencanary_logsAggregateArgs>): Prisma.PrismaPromise<GetOpencanary_logsAggregateType<T>>

    /**
     * Group by Opencanary_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {opencanary_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends opencanary_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: opencanary_logsGroupByArgs['orderBy'] }
        : { orderBy?: opencanary_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, opencanary_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpencanary_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the opencanary_logs model
   */
  readonly fields: opencanary_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for opencanary_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__opencanary_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the opencanary_logs model
   */
  interface opencanary_logsFieldRefs {
    readonly id: FieldRef<"opencanary_logs", 'Int'>
    readonly dst_host: FieldRef<"opencanary_logs", 'String'>
    readonly dst_port: FieldRef<"opencanary_logs", 'Int'>
    readonly local_time: FieldRef<"opencanary_logs", 'String'>
    readonly local_time_adjusted: FieldRef<"opencanary_logs", 'String'>
    readonly logdata_raw: FieldRef<"opencanary_logs", 'String'>
    readonly logdata_msg_logdata: FieldRef<"opencanary_logs", 'String'>
    readonly logtype: FieldRef<"opencanary_logs", 'Int'>
    readonly node_id: FieldRef<"opencanary_logs", 'String'>
    readonly src_host: FieldRef<"opencanary_logs", 'String'>
    readonly src_port: FieldRef<"opencanary_logs", 'Int'>
    readonly utc_time: FieldRef<"opencanary_logs", 'String'>
    readonly full_json_line: FieldRef<"opencanary_logs", 'String'>
  }
    

  // Custom InputTypes
  /**
   * opencanary_logs findUnique
   */
  export type opencanary_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * Filter, which opencanary_logs to fetch.
     */
    where: opencanary_logsWhereUniqueInput
  }

  /**
   * opencanary_logs findUniqueOrThrow
   */
  export type opencanary_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * Filter, which opencanary_logs to fetch.
     */
    where: opencanary_logsWhereUniqueInput
  }

  /**
   * opencanary_logs findFirst
   */
  export type opencanary_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * Filter, which opencanary_logs to fetch.
     */
    where?: opencanary_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opencanary_logs to fetch.
     */
    orderBy?: opencanary_logsOrderByWithRelationInput | opencanary_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for opencanary_logs.
     */
    cursor?: opencanary_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opencanary_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opencanary_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of opencanary_logs.
     */
    distinct?: Opencanary_logsScalarFieldEnum | Opencanary_logsScalarFieldEnum[]
  }

  /**
   * opencanary_logs findFirstOrThrow
   */
  export type opencanary_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * Filter, which opencanary_logs to fetch.
     */
    where?: opencanary_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opencanary_logs to fetch.
     */
    orderBy?: opencanary_logsOrderByWithRelationInput | opencanary_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for opencanary_logs.
     */
    cursor?: opencanary_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opencanary_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opencanary_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of opencanary_logs.
     */
    distinct?: Opencanary_logsScalarFieldEnum | Opencanary_logsScalarFieldEnum[]
  }

  /**
   * opencanary_logs findMany
   */
  export type opencanary_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * Filter, which opencanary_logs to fetch.
     */
    where?: opencanary_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of opencanary_logs to fetch.
     */
    orderBy?: opencanary_logsOrderByWithRelationInput | opencanary_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing opencanary_logs.
     */
    cursor?: opencanary_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` opencanary_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` opencanary_logs.
     */
    skip?: number
    distinct?: Opencanary_logsScalarFieldEnum | Opencanary_logsScalarFieldEnum[]
  }

  /**
   * opencanary_logs create
   */
  export type opencanary_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a opencanary_logs.
     */
    data?: XOR<opencanary_logsCreateInput, opencanary_logsUncheckedCreateInput>
  }

  /**
   * opencanary_logs createMany
   */
  export type opencanary_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many opencanary_logs.
     */
    data: opencanary_logsCreateManyInput | opencanary_logsCreateManyInput[]
  }

  /**
   * opencanary_logs createManyAndReturn
   */
  export type opencanary_logsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * The data used to create many opencanary_logs.
     */
    data: opencanary_logsCreateManyInput | opencanary_logsCreateManyInput[]
  }

  /**
   * opencanary_logs update
   */
  export type opencanary_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a opencanary_logs.
     */
    data: XOR<opencanary_logsUpdateInput, opencanary_logsUncheckedUpdateInput>
    /**
     * Choose, which opencanary_logs to update.
     */
    where: opencanary_logsWhereUniqueInput
  }

  /**
   * opencanary_logs updateMany
   */
  export type opencanary_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update opencanary_logs.
     */
    data: XOR<opencanary_logsUpdateManyMutationInput, opencanary_logsUncheckedUpdateManyInput>
    /**
     * Filter which opencanary_logs to update
     */
    where?: opencanary_logsWhereInput
    /**
     * Limit how many opencanary_logs to update.
     */
    limit?: number
  }

  /**
   * opencanary_logs updateManyAndReturn
   */
  export type opencanary_logsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * The data used to update opencanary_logs.
     */
    data: XOR<opencanary_logsUpdateManyMutationInput, opencanary_logsUncheckedUpdateManyInput>
    /**
     * Filter which opencanary_logs to update
     */
    where?: opencanary_logsWhereInput
    /**
     * Limit how many opencanary_logs to update.
     */
    limit?: number
  }

  /**
   * opencanary_logs upsert
   */
  export type opencanary_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the opencanary_logs to update in case it exists.
     */
    where: opencanary_logsWhereUniqueInput
    /**
     * In case the opencanary_logs found by the `where` argument doesn't exist, create a new opencanary_logs with this data.
     */
    create: XOR<opencanary_logsCreateInput, opencanary_logsUncheckedCreateInput>
    /**
     * In case the opencanary_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<opencanary_logsUpdateInput, opencanary_logsUncheckedUpdateInput>
  }

  /**
   * opencanary_logs delete
   */
  export type opencanary_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
    /**
     * Filter which opencanary_logs to delete.
     */
    where: opencanary_logsWhereUniqueInput
  }

  /**
   * opencanary_logs deleteMany
   */
  export type opencanary_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which opencanary_logs to delete
     */
    where?: opencanary_logsWhereInput
    /**
     * Limit how many opencanary_logs to delete.
     */
    limit?: number
  }

  /**
   * opencanary_logs without action
   */
  export type opencanary_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the opencanary_logs
     */
    select?: opencanary_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the opencanary_logs
     */
    omit?: opencanary_logsOmit<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    UserID: number | null
  }

  export type UsersSumAggregateOutputType = {
    UserID: number | null
  }

  export type UsersMinAggregateOutputType = {
    UserID: number | null
    Email: string | null
    UserName: string | null
    Password: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    UserID: number | null
    Email: string | null
    UserName: string | null
    Password: string | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type UsersCountAggregateOutputType = {
    UserID: number
    Email: number
    UserName: number
    Password: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    UserID?: true
  }

  export type UsersSumAggregateInputType = {
    UserID?: true
  }

  export type UsersMinAggregateInputType = {
    UserID?: true
    Email?: true
    UserName?: true
    Password?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UsersMaxAggregateInputType = {
    UserID?: true
    Email?: true
    UserName?: true
    Password?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type UsersCountAggregateInputType = {
    UserID?: true
    Email?: true
    UserName?: true
    Password?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    UserID: number
    Email: string
    UserName: string
    Password: string
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserID?: boolean
    Email?: boolean
    UserName?: boolean
    Password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserID?: boolean
    Email?: boolean
    UserName?: boolean
    Password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    UserID?: boolean
    Email?: boolean
    UserName?: boolean
    Password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    UserID?: boolean
    Email?: boolean
    UserName?: boolean
    Password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"UserID" | "Email" | "UserName" | "Password" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["users"]>

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      UserID: number
      Email: string
      UserName: string
      Password: string
      createdAt: Date | null
      updatedAt: Date | null
      deletedAt: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `UserID`
     * const usersWithUserIDOnly = await prisma.users.findMany({ select: { UserID: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `UserID`
     * const usersWithUserIDOnly = await prisma.users.createManyAndReturn({
     *   select: { UserID: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `UserID`
     * const usersWithUserIDOnly = await prisma.users.updateManyAndReturn({
     *   select: { UserID: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly UserID: FieldRef<"users", 'Int'>
    readonly Email: FieldRef<"users", 'String'>
    readonly UserName: FieldRef<"users", 'String'>
    readonly Password: FieldRef<"users", 'String'>
    readonly createdAt: FieldRef<"users", 'DateTime'>
    readonly updatedAt: FieldRef<"users", 'DateTime'>
    readonly deletedAt: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Honeypot_logsScalarFieldEnum: {
    id: 'id',
    timestamp: 'timestamp',
    eventid: 'eventid',
    session: 'session',
    message: 'message',
    protocol: 'protocol',
    src_ip: 'src_ip',
    src_port: 'src_port',
    dst_ip: 'dst_ip',
    dst_port: 'dst_port',
    username: 'username',
    password: 'password',
    input: 'input',
    command: 'command',
    duration: 'duration',
    ttylog: 'ttylog',
    json_data: 'json_data'
  };

  export type Honeypot_logsScalarFieldEnum = (typeof Honeypot_logsScalarFieldEnum)[keyof typeof Honeypot_logsScalarFieldEnum]


  export const Opencanary_logsScalarFieldEnum: {
    id: 'id',
    dst_host: 'dst_host',
    dst_port: 'dst_port',
    local_time: 'local_time',
    local_time_adjusted: 'local_time_adjusted',
    logdata_raw: 'logdata_raw',
    logdata_msg_logdata: 'logdata_msg_logdata',
    logtype: 'logtype',
    node_id: 'node_id',
    src_host: 'src_host',
    src_port: 'src_port',
    utc_time: 'utc_time',
    full_json_line: 'full_json_line'
  };

  export type Opencanary_logsScalarFieldEnum = (typeof Opencanary_logsScalarFieldEnum)[keyof typeof Opencanary_logsScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    UserID: 'UserID',
    Email: 'Email',
    UserName: 'UserName',
    Password: 'Password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    
  /**
   * Deep Input Types
   */


  export type honeypot_logsWhereInput = {
    AND?: honeypot_logsWhereInput | honeypot_logsWhereInput[]
    OR?: honeypot_logsWhereInput[]
    NOT?: honeypot_logsWhereInput | honeypot_logsWhereInput[]
    id?: IntFilter<"honeypot_logs"> | number
    timestamp?: StringNullableFilter<"honeypot_logs"> | string | null
    eventid?: StringNullableFilter<"honeypot_logs"> | string | null
    session?: StringNullableFilter<"honeypot_logs"> | string | null
    message?: StringNullableFilter<"honeypot_logs"> | string | null
    protocol?: StringNullableFilter<"honeypot_logs"> | string | null
    src_ip?: StringNullableFilter<"honeypot_logs"> | string | null
    src_port?: IntNullableFilter<"honeypot_logs"> | number | null
    dst_ip?: StringNullableFilter<"honeypot_logs"> | string | null
    dst_port?: IntNullableFilter<"honeypot_logs"> | number | null
    username?: StringNullableFilter<"honeypot_logs"> | string | null
    password?: StringNullableFilter<"honeypot_logs"> | string | null
    input?: StringNullableFilter<"honeypot_logs"> | string | null
    command?: StringNullableFilter<"honeypot_logs"> | string | null
    duration?: FloatNullableFilter<"honeypot_logs"> | number | null
    ttylog?: StringNullableFilter<"honeypot_logs"> | string | null
    json_data?: StringNullableFilter<"honeypot_logs"> | string | null
  }

  export type honeypot_logsOrderByWithRelationInput = {
    id?: SortOrder
    timestamp?: SortOrderInput | SortOrder
    eventid?: SortOrderInput | SortOrder
    session?: SortOrderInput | SortOrder
    message?: SortOrderInput | SortOrder
    protocol?: SortOrderInput | SortOrder
    src_ip?: SortOrderInput | SortOrder
    src_port?: SortOrderInput | SortOrder
    dst_ip?: SortOrderInput | SortOrder
    dst_port?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    input?: SortOrderInput | SortOrder
    command?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    ttylog?: SortOrderInput | SortOrder
    json_data?: SortOrderInput | SortOrder
  }

  export type honeypot_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: honeypot_logsWhereInput | honeypot_logsWhereInput[]
    OR?: honeypot_logsWhereInput[]
    NOT?: honeypot_logsWhereInput | honeypot_logsWhereInput[]
    timestamp?: StringNullableFilter<"honeypot_logs"> | string | null
    eventid?: StringNullableFilter<"honeypot_logs"> | string | null
    session?: StringNullableFilter<"honeypot_logs"> | string | null
    message?: StringNullableFilter<"honeypot_logs"> | string | null
    protocol?: StringNullableFilter<"honeypot_logs"> | string | null
    src_ip?: StringNullableFilter<"honeypot_logs"> | string | null
    src_port?: IntNullableFilter<"honeypot_logs"> | number | null
    dst_ip?: StringNullableFilter<"honeypot_logs"> | string | null
    dst_port?: IntNullableFilter<"honeypot_logs"> | number | null
    username?: StringNullableFilter<"honeypot_logs"> | string | null
    password?: StringNullableFilter<"honeypot_logs"> | string | null
    input?: StringNullableFilter<"honeypot_logs"> | string | null
    command?: StringNullableFilter<"honeypot_logs"> | string | null
    duration?: FloatNullableFilter<"honeypot_logs"> | number | null
    ttylog?: StringNullableFilter<"honeypot_logs"> | string | null
    json_data?: StringNullableFilter<"honeypot_logs"> | string | null
  }, "id">

  export type honeypot_logsOrderByWithAggregationInput = {
    id?: SortOrder
    timestamp?: SortOrderInput | SortOrder
    eventid?: SortOrderInput | SortOrder
    session?: SortOrderInput | SortOrder
    message?: SortOrderInput | SortOrder
    protocol?: SortOrderInput | SortOrder
    src_ip?: SortOrderInput | SortOrder
    src_port?: SortOrderInput | SortOrder
    dst_ip?: SortOrderInput | SortOrder
    dst_port?: SortOrderInput | SortOrder
    username?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    input?: SortOrderInput | SortOrder
    command?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    ttylog?: SortOrderInput | SortOrder
    json_data?: SortOrderInput | SortOrder
    _count?: honeypot_logsCountOrderByAggregateInput
    _avg?: honeypot_logsAvgOrderByAggregateInput
    _max?: honeypot_logsMaxOrderByAggregateInput
    _min?: honeypot_logsMinOrderByAggregateInput
    _sum?: honeypot_logsSumOrderByAggregateInput
  }

  export type honeypot_logsScalarWhereWithAggregatesInput = {
    AND?: honeypot_logsScalarWhereWithAggregatesInput | honeypot_logsScalarWhereWithAggregatesInput[]
    OR?: honeypot_logsScalarWhereWithAggregatesInput[]
    NOT?: honeypot_logsScalarWhereWithAggregatesInput | honeypot_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"honeypot_logs"> | number
    timestamp?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    eventid?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    session?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    message?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    protocol?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    src_ip?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    src_port?: IntNullableWithAggregatesFilter<"honeypot_logs"> | number | null
    dst_ip?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    dst_port?: IntNullableWithAggregatesFilter<"honeypot_logs"> | number | null
    username?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    password?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    input?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    command?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    duration?: FloatNullableWithAggregatesFilter<"honeypot_logs"> | number | null
    ttylog?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
    json_data?: StringNullableWithAggregatesFilter<"honeypot_logs"> | string | null
  }

  export type opencanary_logsWhereInput = {
    AND?: opencanary_logsWhereInput | opencanary_logsWhereInput[]
    OR?: opencanary_logsWhereInput[]
    NOT?: opencanary_logsWhereInput | opencanary_logsWhereInput[]
    id?: IntFilter<"opencanary_logs"> | number
    dst_host?: StringNullableFilter<"opencanary_logs"> | string | null
    dst_port?: IntNullableFilter<"opencanary_logs"> | number | null
    local_time?: StringNullableFilter<"opencanary_logs"> | string | null
    local_time_adjusted?: StringNullableFilter<"opencanary_logs"> | string | null
    logdata_raw?: StringNullableFilter<"opencanary_logs"> | string | null
    logdata_msg_logdata?: StringNullableFilter<"opencanary_logs"> | string | null
    logtype?: IntNullableFilter<"opencanary_logs"> | number | null
    node_id?: StringNullableFilter<"opencanary_logs"> | string | null
    src_host?: StringNullableFilter<"opencanary_logs"> | string | null
    src_port?: IntNullableFilter<"opencanary_logs"> | number | null
    utc_time?: StringNullableFilter<"opencanary_logs"> | string | null
    full_json_line?: StringNullableFilter<"opencanary_logs"> | string | null
  }

  export type opencanary_logsOrderByWithRelationInput = {
    id?: SortOrder
    dst_host?: SortOrderInput | SortOrder
    dst_port?: SortOrderInput | SortOrder
    local_time?: SortOrderInput | SortOrder
    local_time_adjusted?: SortOrderInput | SortOrder
    logdata_raw?: SortOrderInput | SortOrder
    logdata_msg_logdata?: SortOrderInput | SortOrder
    logtype?: SortOrderInput | SortOrder
    node_id?: SortOrderInput | SortOrder
    src_host?: SortOrderInput | SortOrder
    src_port?: SortOrderInput | SortOrder
    utc_time?: SortOrderInput | SortOrder
    full_json_line?: SortOrderInput | SortOrder
  }

  export type opencanary_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: opencanary_logsWhereInput | opencanary_logsWhereInput[]
    OR?: opencanary_logsWhereInput[]
    NOT?: opencanary_logsWhereInput | opencanary_logsWhereInput[]
    dst_host?: StringNullableFilter<"opencanary_logs"> | string | null
    dst_port?: IntNullableFilter<"opencanary_logs"> | number | null
    local_time?: StringNullableFilter<"opencanary_logs"> | string | null
    local_time_adjusted?: StringNullableFilter<"opencanary_logs"> | string | null
    logdata_raw?: StringNullableFilter<"opencanary_logs"> | string | null
    logdata_msg_logdata?: StringNullableFilter<"opencanary_logs"> | string | null
    logtype?: IntNullableFilter<"opencanary_logs"> | number | null
    node_id?: StringNullableFilter<"opencanary_logs"> | string | null
    src_host?: StringNullableFilter<"opencanary_logs"> | string | null
    src_port?: IntNullableFilter<"opencanary_logs"> | number | null
    utc_time?: StringNullableFilter<"opencanary_logs"> | string | null
    full_json_line?: StringNullableFilter<"opencanary_logs"> | string | null
  }, "id">

  export type opencanary_logsOrderByWithAggregationInput = {
    id?: SortOrder
    dst_host?: SortOrderInput | SortOrder
    dst_port?: SortOrderInput | SortOrder
    local_time?: SortOrderInput | SortOrder
    local_time_adjusted?: SortOrderInput | SortOrder
    logdata_raw?: SortOrderInput | SortOrder
    logdata_msg_logdata?: SortOrderInput | SortOrder
    logtype?: SortOrderInput | SortOrder
    node_id?: SortOrderInput | SortOrder
    src_host?: SortOrderInput | SortOrder
    src_port?: SortOrderInput | SortOrder
    utc_time?: SortOrderInput | SortOrder
    full_json_line?: SortOrderInput | SortOrder
    _count?: opencanary_logsCountOrderByAggregateInput
    _avg?: opencanary_logsAvgOrderByAggregateInput
    _max?: opencanary_logsMaxOrderByAggregateInput
    _min?: opencanary_logsMinOrderByAggregateInput
    _sum?: opencanary_logsSumOrderByAggregateInput
  }

  export type opencanary_logsScalarWhereWithAggregatesInput = {
    AND?: opencanary_logsScalarWhereWithAggregatesInput | opencanary_logsScalarWhereWithAggregatesInput[]
    OR?: opencanary_logsScalarWhereWithAggregatesInput[]
    NOT?: opencanary_logsScalarWhereWithAggregatesInput | opencanary_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"opencanary_logs"> | number
    dst_host?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    dst_port?: IntNullableWithAggregatesFilter<"opencanary_logs"> | number | null
    local_time?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    local_time_adjusted?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    logdata_raw?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    logdata_msg_logdata?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    logtype?: IntNullableWithAggregatesFilter<"opencanary_logs"> | number | null
    node_id?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    src_host?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    src_port?: IntNullableWithAggregatesFilter<"opencanary_logs"> | number | null
    utc_time?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
    full_json_line?: StringNullableWithAggregatesFilter<"opencanary_logs"> | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    UserID?: IntFilter<"users"> | number
    Email?: StringFilter<"users"> | string
    UserName?: StringFilter<"users"> | string
    Password?: StringFilter<"users"> | string
    createdAt?: DateTimeNullableFilter<"users"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"users"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"users"> | Date | string | null
  }

  export type usersOrderByWithRelationInput = {
    UserID?: SortOrder
    Email?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    UserID?: number
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    Email?: StringFilter<"users"> | string
    UserName?: StringFilter<"users"> | string
    Password?: StringFilter<"users"> | string
    createdAt?: DateTimeNullableFilter<"users"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"users"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"users"> | Date | string | null
  }, "UserID">

  export type usersOrderByWithAggregationInput = {
    UserID?: SortOrder
    Email?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    UserID?: IntWithAggregatesFilter<"users"> | number
    Email?: StringWithAggregatesFilter<"users"> | string
    UserName?: StringWithAggregatesFilter<"users"> | string
    Password?: StringWithAggregatesFilter<"users"> | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type honeypot_logsCreateInput = {
    timestamp?: string | null
    eventid?: string | null
    session?: string | null
    message?: string | null
    protocol?: string | null
    src_ip?: string | null
    src_port?: number | null
    dst_ip?: string | null
    dst_port?: number | null
    username?: string | null
    password?: string | null
    input?: string | null
    command?: string | null
    duration?: number | null
    ttylog?: string | null
    json_data?: string | null
  }

  export type honeypot_logsUncheckedCreateInput = {
    id?: number
    timestamp?: string | null
    eventid?: string | null
    session?: string | null
    message?: string | null
    protocol?: string | null
    src_ip?: string | null
    src_port?: number | null
    dst_ip?: string | null
    dst_port?: number | null
    username?: string | null
    password?: string | null
    input?: string | null
    command?: string | null
    duration?: number | null
    ttylog?: string | null
    json_data?: string | null
  }

  export type honeypot_logsUpdateInput = {
    timestamp?: NullableStringFieldUpdateOperationsInput | string | null
    eventid?: NullableStringFieldUpdateOperationsInput | string | null
    session?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    protocol?: NullableStringFieldUpdateOperationsInput | string | null
    src_ip?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    dst_ip?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    input?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableFloatFieldUpdateOperationsInput | number | null
    ttylog?: NullableStringFieldUpdateOperationsInput | string | null
    json_data?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type honeypot_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: NullableStringFieldUpdateOperationsInput | string | null
    eventid?: NullableStringFieldUpdateOperationsInput | string | null
    session?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    protocol?: NullableStringFieldUpdateOperationsInput | string | null
    src_ip?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    dst_ip?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    input?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableFloatFieldUpdateOperationsInput | number | null
    ttylog?: NullableStringFieldUpdateOperationsInput | string | null
    json_data?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type honeypot_logsCreateManyInput = {
    id?: number
    timestamp?: string | null
    eventid?: string | null
    session?: string | null
    message?: string | null
    protocol?: string | null
    src_ip?: string | null
    src_port?: number | null
    dst_ip?: string | null
    dst_port?: number | null
    username?: string | null
    password?: string | null
    input?: string | null
    command?: string | null
    duration?: number | null
    ttylog?: string | null
    json_data?: string | null
  }

  export type honeypot_logsUpdateManyMutationInput = {
    timestamp?: NullableStringFieldUpdateOperationsInput | string | null
    eventid?: NullableStringFieldUpdateOperationsInput | string | null
    session?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    protocol?: NullableStringFieldUpdateOperationsInput | string | null
    src_ip?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    dst_ip?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    input?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableFloatFieldUpdateOperationsInput | number | null
    ttylog?: NullableStringFieldUpdateOperationsInput | string | null
    json_data?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type honeypot_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    timestamp?: NullableStringFieldUpdateOperationsInput | string | null
    eventid?: NullableStringFieldUpdateOperationsInput | string | null
    session?: NullableStringFieldUpdateOperationsInput | string | null
    message?: NullableStringFieldUpdateOperationsInput | string | null
    protocol?: NullableStringFieldUpdateOperationsInput | string | null
    src_ip?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    dst_ip?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    username?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    input?: NullableStringFieldUpdateOperationsInput | string | null
    command?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableFloatFieldUpdateOperationsInput | number | null
    ttylog?: NullableStringFieldUpdateOperationsInput | string | null
    json_data?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type opencanary_logsCreateInput = {
    dst_host?: string | null
    dst_port?: number | null
    local_time?: string | null
    local_time_adjusted?: string | null
    logdata_raw?: string | null
    logdata_msg_logdata?: string | null
    logtype?: number | null
    node_id?: string | null
    src_host?: string | null
    src_port?: number | null
    utc_time?: string | null
    full_json_line?: string | null
  }

  export type opencanary_logsUncheckedCreateInput = {
    id?: number
    dst_host?: string | null
    dst_port?: number | null
    local_time?: string | null
    local_time_adjusted?: string | null
    logdata_raw?: string | null
    logdata_msg_logdata?: string | null
    logtype?: number | null
    node_id?: string | null
    src_host?: string | null
    src_port?: number | null
    utc_time?: string | null
    full_json_line?: string | null
  }

  export type opencanary_logsUpdateInput = {
    dst_host?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    local_time?: NullableStringFieldUpdateOperationsInput | string | null
    local_time_adjusted?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_raw?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_msg_logdata?: NullableStringFieldUpdateOperationsInput | string | null
    logtype?: NullableIntFieldUpdateOperationsInput | number | null
    node_id?: NullableStringFieldUpdateOperationsInput | string | null
    src_host?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    utc_time?: NullableStringFieldUpdateOperationsInput | string | null
    full_json_line?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type opencanary_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    dst_host?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    local_time?: NullableStringFieldUpdateOperationsInput | string | null
    local_time_adjusted?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_raw?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_msg_logdata?: NullableStringFieldUpdateOperationsInput | string | null
    logtype?: NullableIntFieldUpdateOperationsInput | number | null
    node_id?: NullableStringFieldUpdateOperationsInput | string | null
    src_host?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    utc_time?: NullableStringFieldUpdateOperationsInput | string | null
    full_json_line?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type opencanary_logsCreateManyInput = {
    id?: number
    dst_host?: string | null
    dst_port?: number | null
    local_time?: string | null
    local_time_adjusted?: string | null
    logdata_raw?: string | null
    logdata_msg_logdata?: string | null
    logtype?: number | null
    node_id?: string | null
    src_host?: string | null
    src_port?: number | null
    utc_time?: string | null
    full_json_line?: string | null
  }

  export type opencanary_logsUpdateManyMutationInput = {
    dst_host?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    local_time?: NullableStringFieldUpdateOperationsInput | string | null
    local_time_adjusted?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_raw?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_msg_logdata?: NullableStringFieldUpdateOperationsInput | string | null
    logtype?: NullableIntFieldUpdateOperationsInput | number | null
    node_id?: NullableStringFieldUpdateOperationsInput | string | null
    src_host?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    utc_time?: NullableStringFieldUpdateOperationsInput | string | null
    full_json_line?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type opencanary_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    dst_host?: NullableStringFieldUpdateOperationsInput | string | null
    dst_port?: NullableIntFieldUpdateOperationsInput | number | null
    local_time?: NullableStringFieldUpdateOperationsInput | string | null
    local_time_adjusted?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_raw?: NullableStringFieldUpdateOperationsInput | string | null
    logdata_msg_logdata?: NullableStringFieldUpdateOperationsInput | string | null
    logtype?: NullableIntFieldUpdateOperationsInput | number | null
    node_id?: NullableStringFieldUpdateOperationsInput | string | null
    src_host?: NullableStringFieldUpdateOperationsInput | string | null
    src_port?: NullableIntFieldUpdateOperationsInput | number | null
    utc_time?: NullableStringFieldUpdateOperationsInput | string | null
    full_json_line?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type usersCreateInput = {
    Email: string
    UserName: string
    Password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type usersUncheckedCreateInput = {
    UserID?: number
    Email: string
    UserName: string
    Password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type usersUpdateInput = {
    Email?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateInput = {
    UserID?: IntFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateManyInput = {
    UserID?: number
    Email: string
    UserName: string
    Password: string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
    deletedAt?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    Email?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    UserID?: IntFieldUpdateOperationsInput | number
    Email?: StringFieldUpdateOperationsInput | string
    UserName?: StringFieldUpdateOperationsInput | string
    Password?: StringFieldUpdateOperationsInput | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type honeypot_logsCountOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    eventid?: SortOrder
    session?: SortOrder
    message?: SortOrder
    protocol?: SortOrder
    src_ip?: SortOrder
    src_port?: SortOrder
    dst_ip?: SortOrder
    dst_port?: SortOrder
    username?: SortOrder
    password?: SortOrder
    input?: SortOrder
    command?: SortOrder
    duration?: SortOrder
    ttylog?: SortOrder
    json_data?: SortOrder
  }

  export type honeypot_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    src_port?: SortOrder
    dst_port?: SortOrder
    duration?: SortOrder
  }

  export type honeypot_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    eventid?: SortOrder
    session?: SortOrder
    message?: SortOrder
    protocol?: SortOrder
    src_ip?: SortOrder
    src_port?: SortOrder
    dst_ip?: SortOrder
    dst_port?: SortOrder
    username?: SortOrder
    password?: SortOrder
    input?: SortOrder
    command?: SortOrder
    duration?: SortOrder
    ttylog?: SortOrder
    json_data?: SortOrder
  }

  export type honeypot_logsMinOrderByAggregateInput = {
    id?: SortOrder
    timestamp?: SortOrder
    eventid?: SortOrder
    session?: SortOrder
    message?: SortOrder
    protocol?: SortOrder
    src_ip?: SortOrder
    src_port?: SortOrder
    dst_ip?: SortOrder
    dst_port?: SortOrder
    username?: SortOrder
    password?: SortOrder
    input?: SortOrder
    command?: SortOrder
    duration?: SortOrder
    ttylog?: SortOrder
    json_data?: SortOrder
  }

  export type honeypot_logsSumOrderByAggregateInput = {
    id?: SortOrder
    src_port?: SortOrder
    dst_port?: SortOrder
    duration?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type opencanary_logsCountOrderByAggregateInput = {
    id?: SortOrder
    dst_host?: SortOrder
    dst_port?: SortOrder
    local_time?: SortOrder
    local_time_adjusted?: SortOrder
    logdata_raw?: SortOrder
    logdata_msg_logdata?: SortOrder
    logtype?: SortOrder
    node_id?: SortOrder
    src_host?: SortOrder
    src_port?: SortOrder
    utc_time?: SortOrder
    full_json_line?: SortOrder
  }

  export type opencanary_logsAvgOrderByAggregateInput = {
    id?: SortOrder
    dst_port?: SortOrder
    logtype?: SortOrder
    src_port?: SortOrder
  }

  export type opencanary_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    dst_host?: SortOrder
    dst_port?: SortOrder
    local_time?: SortOrder
    local_time_adjusted?: SortOrder
    logdata_raw?: SortOrder
    logdata_msg_logdata?: SortOrder
    logtype?: SortOrder
    node_id?: SortOrder
    src_host?: SortOrder
    src_port?: SortOrder
    utc_time?: SortOrder
    full_json_line?: SortOrder
  }

  export type opencanary_logsMinOrderByAggregateInput = {
    id?: SortOrder
    dst_host?: SortOrder
    dst_port?: SortOrder
    local_time?: SortOrder
    local_time_adjusted?: SortOrder
    logdata_raw?: SortOrder
    logdata_msg_logdata?: SortOrder
    logtype?: SortOrder
    node_id?: SortOrder
    src_host?: SortOrder
    src_port?: SortOrder
    utc_time?: SortOrder
    full_json_line?: SortOrder
  }

  export type opencanary_logsSumOrderByAggregateInput = {
    id?: SortOrder
    dst_port?: SortOrder
    logtype?: SortOrder
    src_port?: SortOrder
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type usersCountOrderByAggregateInput = {
    UserID?: SortOrder
    Email?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    UserID?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    UserID?: SortOrder
    Email?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    UserID?: SortOrder
    Email?: SortOrder
    UserName?: SortOrder
    Password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    UserID?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}